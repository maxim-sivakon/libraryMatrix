#test calc_complements_test
    matrix_t src_value1;
    s21_create_matrix(3, 3, &src_value1);
    src_value1.matrix[0][0] = 1.0;
    src_value1.matrix[0][1] = 2.0;
    src_value1.matrix[0][2] = 3.0;
    src_value1.matrix[1][0] = 0.0;
    src_value1.matrix[1][1] = 4.0;
    src_value1.matrix[1][2] = 2.0;
    src_value1.matrix[2][0] = 5.0;
    src_value1.matrix[2][1] = 2.0;
    src_value1.matrix[2][2] = 1.0;
    matrix_t res_value1;
    int result = s21_calc_complements(&src_value1, &res_value1);
    ck_assert_int_eq(result, 0);
    ck_assert_double_eq(res_value1.matrix[0][0], 0);
    ck_assert_double_eq(res_value1.matrix[0][1], 10);
    ck_assert_double_eq(res_value1.matrix[0][2], -20);
    ck_assert_double_eq(res_value1.matrix[1][0], 4);
    ck_assert_double_eq(res_value1.matrix[1][1], -14);
    ck_assert_double_eq(res_value1.matrix[1][2], 8);
    ck_assert_double_eq(res_value1.matrix[2][0], -8);
    ck_assert_double_eq(res_value1.matrix[2][1], -2);
    ck_assert_double_eq(res_value1.matrix[2][2], 4);
    
    s21_remove_matrix(&src_value1);
    s21_remove_matrix(&res_value1);

    matrix_t src_value2;
    s21_create_matrix(15, 8, &src_value2);
    matrix_t res_value2;
    
    result = s21_calc_complements(&src_value2, &res_value2);
    ck_assert_int_eq(result, 2);
    s21_remove_matrix(&src_value2);
    
    result = s21_calc_complements(NULL, NULL);
    ck_assert_int_eq(result, 1);